{
    parserClass="org.intellij.sdk.language.parser.McFunctionParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="McFunction"
    psiImplClassSuffix="Impl"
    psiPackage="org.intellij.sdk.language.psi"
    psiImplPackage="org.intellij.sdk.language.psi.impl"

    elementTypeHolderClass="org.jonatjano.mclang.psi.McFunctionTypes"
    elementTypeClass="org.jonatjano.mclang.psi.McFunctionElementType"
    tokenTypeClass="org.jonatjano.mclang.psi.McFunctionTokenType"

}
//simpleFile ::= item_*
//
//private item_ ::= (property|COMMENT|CRLF)
//
//property ::= (KEY? SEPARATOR VALUE?) | KEY

mcFunctionFile ::= item_*

private item_ ::= (command|COMMENT|CRLF)

command ::= (killCommand|tpCommand)
entities ::= (ENTITY|MULTI_ENTITY)

// advancement
// advancement (grant|revoke) <targets> everything
// advancement (grant|revoke) <targets> only <advancement> [<criterion>]
// advancement (grant|revoke) <targets> from <advancement>
// advancement (grant|revoke) <targets> through <advancement>
// advancement (grant|revoke) <targets> until <advancement>
// <targets> entities
// <advancement> resource_location
// <criterion> string

// attribute
// attribute <target> <attribute> get [<scale>]
// attribute <target> <attribute> base get [<scale>]
// attribute <target> <attribute> base set <value>
// attribute <target> <attribute> modifier add <uuid> <name> <value> (add|multiply|multiply_base)
// attribute <target> <attribute> modifier remove <uuid>
// attribute <target> <attribute> modifier value get <uuid> [<scale>]
// <target> entity
// <attribute> resource_location
// <scale> double
// <uuid> uuid 00000001-0002-0003-0004-000000000005
// <name> string "[-+._A-Za-z0-9]+"
// <value> double

// ban
// ban <targets> [<reason>]
// <targets> players
// <reason> string_with_selectors

killCommand ::= KILL entities

tpCommand ::= TELEPORT ((entities ENTITY)|(entities tpVecArgs)|ENTITY|tpVecArgs)
tpVecArgs ::= VEC3 (ROTATION|tpFacingArg)?
tpFacingArg ::= TOK_FACING (VEC3|(TOK_ENTITY ENTITY)) ENTITY_ANCHOR?

/*
single
@p
@r
@a[limit=1]
@e[limit=1]
@s

multi
@p[limit!=1]
@r[limit!=1]
@a
@e
*/