{
    parserClass="org.intellij.sdk.language.parser.McFunctionParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="McFunction"
    psiImplClassSuffix="Impl"
    psiPackage="org.intellij.sdk.language.psi"
    psiImplPackage="org.intellij.sdk.language.psi.impl"

    elementTypeHolderClass="org.jonatjano.mclang.psi.McFunctionTypes"
    elementTypeClass="org.jonatjano.mclang.psi.McFunctionElementType"
    tokenTypeClass="org.jonatjano.mclang.psi.McFunctionTokenType"
}
//simpleFile ::= item_*
//
//private item_ ::= (property|COMMENT|CRLF)
//
//property ::= (KEY? SEPARATOR VALUE?) | KEY

mcFunctionFile ::= item_*

private item_ ::= (command|COMMENT|CRLF)

vec3 ::= (float float float)|(TOK_TILDE float TOK_TILDE float TOK_TILDE float)|(TOK_CIRCONFLEX float TOK_CIRCONFLEX float TOK_CIRCONFLEX float)
integer ::= INTEGER_ONE|INTEGER_NOT_ONE|INTEGER_SIGNED
u_float ::= U_FLOAT_RULE|integer
float ::= u_float|FLOAT_RULE
integer_range ::= (integer TOK_RANGE integer)|(integer TOK_RANGE)|(TOK_RANGE integer)|integer
u_float_range ::= (u_float TOK_RANGE u_float)|(u_float TOK_RANGE)|(TOK_RANGE u_float)|u_float
float_range ::= (float TOK_RANGE float)|(float TOK_RANGE)|(TOK_RANGE float)|float

fractional ::= float (TOK_FRACTIONAL float)?
resource_location ::= RESOURCE_LOCATION_RULE|word
word ::= PLAYER_PSEUDO|WORD_RULE|GAMEMODE_KEYWORDS|ENTITY_ANCHOR

nbt_object ::= TOK_OPEN_CURLY word TOK_COLON nbt_value(TOK_COMMA word TOK_COLON nbt_value)* TOK_CLOSE_CURLY
nbt_array ::= TOK_OPEN_SQUARE (ARRAY_TYPE_MARKER TOK_SEMI_COLON)? (nbt_value(TOK_COMMA nbt_value)*)?
nbt_value ::= nbt_object|nbt_array|BOOLEAN|integer|float|STRING

// ------------------------------------------------------------------
// entity selectors
// ------------------------------------------------------------------

// positional
position_argument ::= SELECTOR_ARGUMENT_XYZ TOK_EQUAL float
distance_argument ::= SELECTOR_ARGUMENT_DISTANCE TOK_EQUAL u_float_range
volume_argument ::= SELECTOR_ARGUMENT_DXYZ TOK_EQUAL fractional

// scoreboard value
scores_argument ::= SELECTOR_ARGUMENT_SCORES TOK_EQUAL TOK_OPEN_CURLY word TOK_EQUAL integer_range(TOK_COMMA word TOK_EQUAL integer_range)*TOK_CLOSE_CURLY
tag_argument ::= SELECTOR_ARGUMENT_TAG TOK_EQUAL TOK_NEGATE?word?
team_argument ::= SELECTOR_ARGUMENT_TEAM TOK_EQUAL TOK_NEGATE?word?

// traits
sort_argument ::= SELECTOR_ARGUMENT_SORT TOK_EQUAL SORT_KEYWORDS
level_argument ::= SELECTOR_ARGUMENT_LEVEL TOK_EQUAL integer_range
gamemode_argument ::= SELECTOR_ARGUMENT_GAMEMODE TOK_EQUAL TOK_NEGATE?GAMEMODE_KEYWORDS
name_argument ::= SELECTOR_ARGUMENT_NAME TOK_EQUAL TOK_NEGATE?word
rotation_argument ::= SELECTOR_ARGUMENT_XY_ROTATION TOK_EQUAL float_range
type_argument ::= SELECTOR_ARGUMENT_TYPE TOK_EQUAL TOK_NEGATE?resource_location
nbt_argument ::= SELECTOR_ARGUMENT_NBT TOK_EQUAL nbt_object
advancements_argument ::= SELECTOR_ARGUMENT_ADVANCEMENTS TOK_EQUAL TOK_OPEN_CURLY resource_location TOK_EQUAL (BOOLEAN|(TOK_OPEN_CURLY word TOK_EQUAL BOOLEAN(TOK_COMMA word TOK_EQUAL BOOLEAN)* TOK_CLOSE_CURLY))TOK_CLOSE_CURLY
predicate_argument ::= SELECTOR_ARGUMENT_PREDICATE TOK_EQUAL TOK_NEGATE?resource_location

entity_selector_argument ::=
    position_argument|distance_argument|volume_argument|
    scores_argument|tag_argument|team_argument|
    sort_argument|level_argument|gamemode_argument|name_argument|rotation_argument|type_argument|nbt_argument|advancements_argument|predicate_argument

limit_1_argument ::= SELECTOR_ARGUMENT_LIMIT TOK_EQUAL INTEGER_ONE
limit_not_1_argument ::= SELECTOR_ARGUMENT_LIMIT TOK_EQUAL INTEGER_NOT_ONE

no_limit_entity_selector_argument ::= TOK_OPEN_SQUARE entity_selector_argument(TOK_COMMA entity_selector_argument)* TOK_CLOSE_SQUARE
limit_1_entity_selector_argument ::= TOK_OPEN_SQUARE entity_selector_argument|limit_1_argument(TOK_COMMA entity_selector_argument|limit_1_argument)* TOK_CLOSE_SQUARE
limit_not_1_entity_selector_argument ::= TOK_OPEN_SQUARE entity_selector_argument|limit_not_1_argument(TOK_COMMA entity_selector_argument|limit_not_1_argument)* TOK_CLOSE_SQUARE

base_unique_entity_selector ::= TOK_AT_P|TOK_AT_R
base_multi_entity_selector ::= TOK_AT_A|TOK_AT_E
forced_unique_entity_selector ::= TOK_AT_S

unique_entity_selector ::=
    (base_unique_entity_selector no_limit_entity_selector_argument?)|
    (base_unique_entity_selector limit_1_entity_selector_argument)|
    (base_multi_entity_selector limit_1_entity_selector_argument)|
    (forced_unique_entity_selector no_limit_entity_selector_argument?)|
    (forced_unique_entity_selector limit_1_entity_selector_argument)
multi_entity_selector ::=
    (base_unique_entity_selector limit_not_1_entity_selector_argument)|
    (base_multi_entity_selector no_limit_entity_selector_argument?)|
    (base_multi_entity_selector limit_not_1_entity_selector_argument)

entities ::= multi_entity_selector|entity
entity ::= unique_entity_selector|PLAYER_PSEUDO|UUID

// ------------------------------------------------------------------
// commands
// ------------------------------------------------------------------

/*
// ------------------------------------------------------------------
// entity selectors
// ------------------------------------------------------------------

// positional
POSITION_ARGUMENT=[xyz]={FLOAT}
DISTANCE_ARGUMENT=distance={U_FLOAT}|{U_FLOAT_RANGE}
VOLUME_ARGUMENT=d[xyz]={FLOAT}|{FRACTIONAL}

// scoreboard value
SCORE_ARGUMENT=score=\{\w+={INTEGER}|{INTEGER_RANGE}(,\w+={INTEGER}|{INTEGER_RANGE})*\}
TAG_ARGUMENT=tag=\!?\w*
TEAM_ARGUMENT=team=\!?\w*

// traits
SORT_ARGUMENT=sort=(nearest)|(furthest)|(random)|(arbitrary)
LEVEL_ARGUMENT=level={INTEGER}|{INTEGER_RANGE}
GAMEMODE_ARGUMENT=gamemode=\!?(spectator)|(survival)|(creative)|(adventure)
NAME_ARGUMENT=name=\!?\w+
ROTATION_ARGUMENT=[xy]_rotation={FLOAT}|{FLOAT_RANGE}
TYPE_ARGUMENT=type=\!?{RESOURCE_LOCATION}
// TODO write it really
NBT_ARGUMENT=nbt=\{.*\}
ADVANCEMENTS_ARGUMENT=advancements=\{{RESOURCE_LOCATION}={BOOLEAN}|(\{\w+={BOOLEAN}\})\}
PREDICATE_ARGUMENT=predicate=\!?{RESOURCE_LOCATION}

// compound
ENTITY_SELECTOR_ARGUMENT=
    {POSITION_ARGUMENT}|{DISTANCE_ARGUMENT}|{VOLUME_ARGUMENT}|
    {SCORE_ARGUMENT}|{TAG_ARGUMENT}|{TEAM_ARGUMENT}|
    {SORT_ARGUMENT}|{LEVEL_ARGUMENT}|{GAMEMODE_ARGUMENT}|{NAME_ARGUMENT}|{ROTATION_ARGUMENT}|{TYPE_ARGUMENT}|{NBT_ARGUMENT}|{ADVANCEMENTS_ARGUMENT}|{PREDICATE_ARGUMENT}

LIMIT_1_ARGUMENT=limit=1
LIMIT_NOT_1_ARGUMENT=limit=([02-9]|\d\d+)

NO_LIMIT_ENTITY_SELECTOR_ARGUMENT=\[{ENTITY_SELECTOR_ARGUMENT}(,{ENTITY_SELECTOR_ARGUMENT})*\]
LIMIT_1_ENTITY_SELECTOR_ARGUMENT=\[{ENTITY_SELECTOR_ARGUMENT}(,({ENTITY_SELECTOR_ARGUMENT}|{LIMIT_1_ARGUMENT}))*\]
LIMIT_NOT_1_ENTITY_SELECTOR_ARGUMENT=\[{ENTITY_SELECTOR_ARGUMENT}(,({ENTITY_SELECTOR_ARGUMENT}|{LIMIT_NOT_1_ARGUMENT}))*\]

BASE_LIMIT_1_SELECTOR=(@p)|(@r)
BASE_LIMIT_NOT_1_SELECTOR=(@a)|(@e)
FORCED_LIMIT_1_SELECTOR=@s

LIMIT_1_SELECTOR=
    ({BASE_LIMIT_1_SELECTOR}{NO_LIMIT_ENTITY_SELECTOR_ARGUMENT}?)|
    ({BASE_LIMIT_1_SELECTOR}{LIMIT_1_ENTITY_SELECTOR_ARGUMENT}?)|

    ({BASE_LIMIT_NOT_1_SELECTOR}{LIMIT_1_ENTITY_SELECTOR_ARGUMENT}?)|

    ({FORCED_LIMIT_1_SELECTOR}{NO_LIMIT_ENTITY_SELECTOR_ARGUMENT}?)|
    ({FORCED_LIMIT_1_SELECTOR}{LIMIT_1_ENTITY_SELECTOR_ARGUMENT}?)

LIMIT_NOT_1_SELECTOR=
    ({BASE_LIMIT_1_SELECTOR}{LIMIT_NOT_1_ENTITY_SELECTOR_ARGUMENT}?)|
    ({BASE_LIMIT_NOT_1_SELECTOR}{LIMIT_1_ENTITY_SELECTOR_ARGUMENT}?)|
    ({BASE_LIMIT_NOT_1_SELECTOR}{LIMIT_NOT_1_ENTITY_SELECTOR_ARGUMENT}?)
*/

// advancement
// advancement (grant|revoke) <targets> everything
// advancement (grant|revoke) <targets> only <advancement> [<criterion>]
// advancement (grant|revoke) <targets> from <advancement>
// advancement (grant|revoke) <targets> through <advancement>
// advancement (grant|revoke) <targets> until <advancement>
// <targets> entities
// <advancement> resource_location
// <criterion> string
//advancementCommand := ADVANCEMENT TOK_GRANT_OR_REVOKE entities (TOK_EVERYTHING|(TOK_ONLY RESOURCE_LOCATION CRITERION?)|(TOK_ADVANCEMENT_LIMITS RESOURCE_LOCATION))

// attribute
// attribute <target> <attribute> get [<scale>]
// attribute <target> <attribute> base get [<scale>]
// attribute <target> <attribute> base set <value>
// attribute <target> <attribute> modifier add <uuid> <name> <value> (add|multiply|multiply_base)
// attribute <target> <attribute> modifier remove <uuid>
// attribute <target> <attribute> modifier value get <uuid> [<scale>]
// <target> entity
// <attribute> resource_location
// <scale> double
// <uuid> uuid 00000001-0002-0003-0004-000000000005
// <name> string "[-+._A-Za-z0-9]+"
// <value> double

// ban
// ban <targets> [<reason>]
// <targets> players
// <reason> string_with_selectors

command ::= (killCommand|tpCommand) {recoverWhile="command_recover"}
private command_recover ::= !CRLF

killCommand ::= COMMAND_KILL entities {pin=1}

tpCommand ::= COMMAND_TELEPORT ((entities entity)|(entities tpVecArgs)|entity|tpVecArgs) {pin=1}
tpVecArgs ::= vec3 (float|tpFacingArg)?
tpFacingArg ::= TOK_FACING (vec3|(TOK_ENTITY entity)) ENTITY_ANCHOR?

/*
single
@p
@r
@a[limit=1]
@e[limit=1]FLOAT
@s

multi
@p[limit!=1]
@r[limit!=1]
@a
@e
*/